/*******************************************************************
 *  An example of usisng the InstagramStats library to get
 *  info on a given user
 *
 *  Written by Brian Lough
 *  https://www.youtube.com/channel/UCezJOfu7OtqGzd5xrP3q6WA
 *******************************************************************/
 // ----------------------------
 // Standard Libraries - Already Installed if you have ESP32 set up
 // ----------------------------

#include "InstagramStats.h"
#include "Arduino.h"
#include <Servo.h>

Servo servo1;

#include <WiFi.h>
#include <WiFiClientSecure.h>

//Instagram Followers range for mapping
#define MinFollowers 73925950
#define MaxFollowers 73925950+50

//Servo
static const int servoPin = 5;
// static const int potentiometerPin = 14;

// int value;
int followedByCount;

//int LED value and setup
int freq = 5000;
int ledChannel = 0;
int resolution = 8;
#define LedPin 25


// ----------------------------
// Additional Libraries - each one of these will need to be installed.
// ----------------------------

#include "JsonStreamingParser.h"
// Used to parse the Json code within the library
// Available on the library manager (Search for "Json Streamer Parser")
// https://github.com/squix78/json-streaming-parser

//------- Replace the following! ------
char ssid[] = "VM6722315";       // your network SSID (name)  iPhone Maciek
char password[] = "w6vpPnqFrwvv";  // your network key  o9h2gott

WiFiClientSecure client;
InstagramStats instaStats(client);

unsigned long delayBetweenChecks = 10000; //mean time between api requests
unsigned long whenDueToCheck = 0;

//Inputs
String userName = "katyperry"; // from their instagram url https://www.instagram.com/brian_lough/


void setup() {

  Serial.begin(115200);
  servo1.attach(servoPin);
  
  ledcSetup(ledChannel, freq, resolution);
  ledcAttachPin(LedPin, ledChannel);

  // Attempt to connect to Wifi network:
  Serial.print("Connecting Wifi: ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  IPAddress ip = WiFi.localIP();
  Serial.println(ip);
}

void getInstagramStatsForUser() {
  Serial.println("Getting instagram user stats for " + userName );
  InstagramUserStats response = instaStats.getUserStats(userName);
  Serial.println("Response:");
  Serial.print("Number of followers: ");
  Serial.println(response.followedByCount);

  if(response.followedByCount != 0){
  int servoPosition = map(response.followedByCount, MinFollowers, MaxFollowers, 0, 180);
  servo1.write(servoPosition);
  Serial.print("Servo Position: ");
  Serial.println(servoPosition);
  }

  if(response.followedByCount != 0){
  InstagramUserStats response = instaStats.getUserStats(userName);
  int ledintensity = map(response.followedByCount, MinFollowers, MaxFollowers, 255, 0);  
  if(ledintensity < 255){
   ledcWrite(ledChannel, ledintensity);       
   Serial.print("Led Intensity: ");
   Serial.println(255-ledintensity);
   }
  }
 
}
 
void loop() {
    unsigned long timeNow = millis();
  if ((timeNow > whenDueToCheck))  {
    getInstagramStatsForUser();
    whenDueToCheck = timeNow + delayBetweenChecks;
  }
}
